{"ast":null,"code":"import { InstrumentationBase } from '@opentelemetry/instrumentation';\nimport { CoralogixAttributes } from '../constants';\nimport { CoralogixLogSeverity } from '../types-external';\nimport { CoralogixEventType } from '../types';\nimport { getSdkConfig } from '../helpers';\nimport { omit } from '../utils/object';\nexport const INTERNAL_INSTRUMENTATION_VERSION = '1';\nexport class CoralogixInternalInstrumentation extends InstrumentationBase {\n  constructor(config) {\n    super(CoralogixEventType.INTERNAL, INTERNAL_INSTRUMENTATION_VERSION, config);\n  }\n  init() {}\n  disable() {}\n  enable() {}\n  reportInternalEvent(event, message = '') {\n    const span = this.tracer.startSpan(CoralogixEventType.INTERNAL);\n    let data;\n    span.setAttribute(CoralogixAttributes.EVENT_TYPE, CoralogixEventType.INTERNAL);\n    span.setAttribute(CoralogixAttributes.SEVERITY, CoralogixLogSeverity.Info);\n    switch (event) {\n      case 'init':\n        {\n          const config = omit(getSdkConfig(), 'public_key', 'coralogixDomain');\n          data = this.stringifyConfig(config);\n          break;\n        }\n      case 'recording-start':\n        break;\n      case 'recording-stop':\n        data = message;\n        break;\n      default:\n        break;\n    }\n    span.setAttribute(CoralogixAttributes.INTERNAL, JSON.stringify({\n      event,\n      data\n    }));\n    span.end();\n  }\n  stringifyConfig(config) {\n    const replacer = (key, value) => {\n      if (value instanceof RegExp) {\n        return value.toString();\n      }\n      return value;\n    };\n    return JSON.stringify(config, replacer);\n  }\n}","map":{"version":3,"names":["InstrumentationBase","CoralogixAttributes","CoralogixLogSeverity","CoralogixEventType","getSdkConfig","omit","INTERNAL_INSTRUMENTATION_VERSION","CoralogixInternalInstrumentation","constructor","config","INTERNAL","init","disable","enable","reportInternalEvent","event","message","span","tracer","startSpan","data","setAttribute","EVENT_TYPE","SEVERITY","Info","stringifyConfig","JSON","stringify","end","replacer","key","value","RegExp","toString"],"sources":["../../../../../libs/browser/src/instrumentations/CoralogixInternalInstrumentation.ts"],"sourcesContent":[null],"mappings":"AAAA,SACEA,mBAAmB,QAEd,gCAAgC;AACvC,SAASC,mBAAmB,QAAQ,cAAc;AAClD,SAASC,oBAAoB,QAAQ,mBAAmB;AACxD,SAAoCC,kBAAkB,QAAQ,UAAU;AACxE,SAASC,YAAY,QAAQ,YAAY;AACzC,SAASC,IAAI,QAAQ,iBAAiB;AAGtC,OAAO,MAAMC,gCAAgC,GAAG,GAAG;AASnD,OAAM,MAAOC,gCAAiC,SAAQP,mBAAmB;EACvEQ,YAAYC,MAA6B;IACvC,KAAK,CACHN,kBAAkB,CAACO,QAAQ,EAC3BJ,gCAAgC,EAChCG,MAAM,CACP;EACH;EAEAE,IAAIA,CAAA,GAAU;EAELC,OAAOA,CAAA,GAAI;EAEXC,MAAMA,CAAA,GAAI;EAEnBC,mBAAmBA,CACjBC,KAA6B,EAC7BC,OAAA,GAAkB,EAAE;IAEpB,MAAMC,IAAI,GAAS,IAAI,CAACC,MAAM,CAACC,SAAS,CAAChB,kBAAkB,CAACO,QAAQ,CAAC;IACrE,IAAIU,IAAS;IAEbH,IAAI,CAACI,YAAY,CACfpB,mBAAmB,CAACqB,UAAU,EAC9BnB,kBAAkB,CAACO,QAAQ,CAC5B;IAEDO,IAAI,CAACI,YAAY,CAACpB,mBAAmB,CAACsB,QAAQ,EAAErB,oBAAoB,CAACsB,IAAI,CAAC;IAE1E,QAAQT,KAAK;MACX,KAAK,MAAM;QAAE;UACX,MAAMN,MAAM,GAAGJ,IAAI,CAACD,YAAY,EAAE,EAAE,YAAY,EAAE,iBAAiB,CAAC;UAEpEgB,IAAI,GAAG,IAAI,CAACK,eAAe,CAAChB,MAAM,CAAC;UACnC;;MAEF,KAAK,iBAAiB;QACpB;MACF,KAAK,gBAAgB;QACnBW,IAAI,GAAGJ,OAAO;QACd;MACF;QACE;;IAGJC,IAAI,CAACI,YAAY,CACfpB,mBAAmB,CAACS,QAAQ,EAC5BgB,IAAI,CAACC,SAAS,CAAC;MACbZ,KAAK;MACLK;KACD,CAAC,CACH;IAEDH,IAAI,CAACW,GAAG,EAAE;EACZ;EAEQH,eAAeA,CAAChB,MAA0C;IAChE,MAAMoB,QAAQ,GAAGA,CAACC,GAAW,EAAEC,KAAU,KAAI;MAC3C,IAAIA,KAAK,YAAYC,MAAM,EAAE;QAC3B,OAAOD,KAAK,CAACE,QAAQ,EAAE;;MAEzB,OAAOF,KAAK;IACd,CAAC;IAED,OAAOL,IAAI,CAACC,SAAS,CAAClB,MAAM,EAAEoB,QAAQ,CAAC;EACzC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}