{"ast":null,"code":"import { isNil } from './general';\n/**\n * Ensures a given value is converted into an array of elements.\n *\n * @template T - The type of the input value and the elements in the resulting array.\n *\n * @param value - The input value, which can be a single instance of type `T`, an array of instances of type `T`, or a Set of instances of type `T`.\n *\n * @returns An array of elements of type `T`. If the input is `null` or `undefined`, returns an empty array.\n */\nexport function coerceArray(value) {\n  if (isNil(value)) return [];\n  if (value instanceof Set) return [...value];\n  return Array.isArray(value) ? value : [value];\n}","map":{"version":3,"names":["isNil","coerceArray","value","Set","Array","isArray"],"sources":["../../../../../libs/browser/src/utils/array.ts"],"sourcesContent":[null],"mappings":"AAAA,SAASA,KAAK,QAAQ,WAAW;AAEjC;;;;;;;;;AASA,OAAM,SAAUC,WAAWA,CAAIC,KAAc;EAC3C,IAAIF,KAAK,CAACE,KAAK,CAAC,EAAE,OAAO,EAAE;EAE3B,IAAIA,KAAK,YAAYC,GAAG,EAAE,OAAO,CAAC,GAAGD,KAAK,CAAC;EAE3C,OAAOE,KAAK,CAACC,OAAO,CAACH,KAAK,CAAC,GAAGA,KAAK,GAAG,CAACA,KAAK,CAAC;AAC/C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}