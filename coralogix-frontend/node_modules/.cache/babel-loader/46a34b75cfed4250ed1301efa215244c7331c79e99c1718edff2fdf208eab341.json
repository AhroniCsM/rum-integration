{"ast":null,"code":"import { BatchSpanProcessor } from '@opentelemetry/sdk-trace-base';\nimport { getInstrumentationConfig, partition, saveInternalRumData } from './utils';\nimport { CoralogixSpanAttributesProcessor } from './processors/CoralogixSpanAttributesProcessor';\nimport { UrlType } from './types';\nimport { CoralogixAttributes, INSTRUMENTATIONS, MAX_EXPORT_BATCH_SIZE, NETWORK_URL_LABEL_PROVIDERS_KEY, OPTIONS_DEFAULTS, PAGE_URL_LABEL_PROVIDERS_KEY, SCHEDULE_DELAY_MILLIS, SDK_CONFIG_KEY } from './constants';\nimport { CoralogixExporter } from './processors/CoralogixExporter';\nimport { CoralogixLogSeverity } from './types-external';\nimport { CoralogixCustomLogInstrumentation } from './instrumentations/CoralogixCustomLogInstrumentation';\nimport { CoralogixWebTracerProvider } from './CoralogixWebTracerProvider';\nimport { SessionManager } from './session/sessionManager';\nimport { getSessionManager, getSessionRecorder } from './helpers';\nimport { INTERNAL_INSTRUMENTATION_NAME } from './instrumentations/instrumentation.consts';\nimport { reportInternalEvent } from './internal-event-reporter';\nimport { handlePropagators } from './propagators';\nimport { validateAndResolveInitConfig } from './configuration';\nimport { isSamplingOn } from './session/session.helper';\nimport { CoralogixSpanMapProcessor } from './processors/CoralogixSpanMapProcessor';\nimport { CoralogixSnapshotSpanProcessor } from './processors/CoralogixSnapshotSpanProcessor';\nimport { SnapshotManager } from './snapshot/snapshotManager';\nimport { registerInstrumentations } from '@opentelemetry/instrumentation';\nimport { CoralogixNavigationProcessor } from './processors/CoralogixNavigationProcessor';\nlet isInited = false;\nlet _deregisterInstrumentations;\nlet _customInstrumentation;\nlet tracerProvider;\nlet attributesProcessor;\nlet snapshotProcessor;\nlet spanMapProcessor;\nlet navigationProcessor;\nlet exporter;\nexport const CoralogixRum = {\n  get isInited() {\n    return isInited;\n  },\n  init: function (options) {\n    // Check if CoralogixRum already inited.\n    if (isInited) {\n      console.warn('CoralogixRum already inited.');\n      return;\n    }\n    // Abort if running in a non-browser environment.\n    if (typeof window !== 'object') {\n      console.warn('CoralogixRum: Non-browser environment detected, aborting');\n      return;\n    }\n    // Abort if running in a not supported browser.\n    if (typeof Symbol !== 'function') {\n      console.error('CoralogixRum: browser not supported, disabling instrumentation.');\n      return;\n    }\n    const resolvedOptions = validateAndResolveInitConfig(options);\n    if (!resolvedOptions) {\n      return;\n    }\n    window[SDK_CONFIG_KEY] = resolvedOptions;\n    if (\n    //todo: remove when sessionSampleRate is removed\n    !isSamplingOn(resolvedOptions.sessionSampleRate) || !isSamplingOn(resolvedOptions.sessionConfig.sessionSampleRate)) {\n      if (options.debug) {\n        console.debug('CoralogixRum: Session tracking is disabled');\n      }\n      return;\n    }\n    // Check if not in debug mode & no auth token.\n    if (!resolvedOptions.debug && !resolvedOptions.public_key) {\n      console.warn('rumAuth will be required in the future');\n    }\n    new SessionManager(resolvedOptions.sessionRecordingConfig).start();\n    const {\n      ignoreUrls,\n      labels,\n      user_context,\n      application,\n      version,\n      traceParentInHeader,\n      environment\n    } = resolvedOptions;\n    tracerProvider = new CoralogixWebTracerProvider();\n    const pluginDefaults = {};\n    // Resolve instrumentations.\n    const instrumentations = INSTRUMENTATIONS.map(({\n      Instrument,\n      confKey,\n      disable\n    }) => {\n      var _a;\n      const pluginConf = getInstrumentationConfig((_a = resolvedOptions === null || resolvedOptions === void 0 ? void 0 : resolvedOptions.instrumentations) === null || _a === void 0 ? void 0 : _a[confKey], pluginDefaults, disable);\n      if (pluginConf) {\n        let instrumentation;\n        switch (confKey) {\n          case 'errors':\n            {\n              instrumentation = new Instrument(Object.assign(Object.assign({}, pluginConf), {\n                ignoreErrors: options === null || options === void 0 ? void 0 : options.ignoreErrors\n              }));\n              break;\n            }\n          case 'fetch':\n          case 'xhr':\n            {\n              instrumentation = new Instrument(Object.assign(Object.assign({}, pluginConf), {\n                ignoreUrls,\n                traceParentInHeader\n              }));\n              break;\n            }\n          case INTERNAL_INSTRUMENTATION_NAME:\n            {\n              instrumentation = new Instrument(pluginConf);\n              saveInternalRumData(INTERNAL_INSTRUMENTATION_NAME, instrumentation);\n              break;\n            }\n          default:\n            instrumentation = new Instrument(pluginConf);\n        }\n        if (instrumentation instanceof CoralogixCustomLogInstrumentation) {\n          _customInstrumentation = instrumentation;\n        }\n        return instrumentation;\n      }\n      return null;\n    }).filter(a => Boolean(a));\n    const mergedUserContext = Object.assign(Object.assign({}, OPTIONS_DEFAULTS.user_context), user_context);\n    // Init Span Attributes Processor.\n    attributesProcessor = new CoralogixSpanAttributesProcessor(Object.assign({\n      [CoralogixAttributes.APPLICATION_CONTEXT]: JSON.stringify({\n        application,\n        version\n      }),\n      [CoralogixAttributes.USER_CONTEXT]: JSON.stringify(mergedUserContext)\n    }, environment ? {\n      [CoralogixAttributes.ENVIRONMENT]: environment\n    } : {}));\n    if (labels) {\n      attributesProcessor.setCustomLabels(labels);\n    }\n    // The order of processors is important.\n    tracerProvider.addSpanProcessor(attributesProcessor);\n    // Add Navigation Processor\n    navigationProcessor = new CoralogixNavigationProcessor();\n    tracerProvider.addSpanProcessor(navigationProcessor);\n    // Add Span Mapping Processor\n    spanMapProcessor = new CoralogixSpanMapProcessor();\n    tracerProvider.addSpanProcessor(spanMapProcessor);\n    // Add snapshot processor\n    new SnapshotManager();\n    snapshotProcessor = new CoralogixSnapshotSpanProcessor();\n    tracerProvider.addSpanProcessor(snapshotProcessor);\n    // Add Batch Span Processor and Exporter\n    tracerProvider.addSpanProcessor(new BatchSpanProcessor(exporter = new CoralogixExporter(), {\n      maxExportBatchSize: MAX_EXPORT_BATCH_SIZE,\n      scheduledDelayMillis: SCHEDULE_DELAY_MILLIS\n    }));\n    handlePropagators(options, tracerProvider);\n    // Register Instrumentations\n    _deregisterInstrumentations = registerInstrumentations({\n      tracerProvider,\n      instrumentations\n    });\n    const [pageUrlLabelProviders, networkUrlLabelProviders] = partition(resolvedOptions.labelProviders || [], ({\n      urlType\n    }) => urlType === UrlType.PAGE || !urlType);\n    saveInternalRumData(PAGE_URL_LABEL_PROVIDERS_KEY, pageUrlLabelProviders);\n    saveInternalRumData(NETWORK_URL_LABEL_PROVIDERS_KEY, networkUrlLabelProviders);\n    isInited = true;\n    if (options === null || options === void 0 ? void 0 : options.debug) {\n      console.info('CoralogixRum.init() complete');\n    }\n    reportInternalEvent('init');\n  },\n  shutdown() {\n    var _a;\n    if (!isInited) {\n      return;\n    }\n    _deregisterInstrumentations === null || _deregisterInstrumentations === void 0 ? void 0 : _deregisterInstrumentations();\n    _deregisterInstrumentations = undefined;\n    this.stopSessionRecording();\n    (_a = getSessionManager()) === null || _a === void 0 ? void 0 : _a.stop();\n    attributesProcessor === null || attributesProcessor === void 0 ? void 0 : attributesProcessor.shutdown();\n    navigationProcessor === null || navigationProcessor === void 0 ? void 0 : navigationProcessor.shutdown();\n    spanMapProcessor === null || spanMapProcessor === void 0 ? void 0 : spanMapProcessor.shutdown();\n    snapshotProcessor === null || snapshotProcessor === void 0 ? void 0 : snapshotProcessor.shutdown();\n    exporter === null || exporter === void 0 ? void 0 : exporter.shutdown();\n    isInited = false;\n  },\n  setApplicationContext(applicationContext) {\n    if (!isInited) {\n      console.debug('CoralogixRum must be initiated before setting application context');\n      return;\n    }\n    attributesProcessor === null || attributesProcessor === void 0 ? void 0 : attributesProcessor.setInternalLabels(Object.assign(Object.assign({}, attributesProcessor.getInternalLabels()), {\n      [CoralogixAttributes.APPLICATION_CONTEXT]: applicationContext\n    }));\n  },\n  stopSessionRecording() {\n    var _a;\n    (_a = getSessionRecorder()) === null || _a === void 0 ? void 0 : _a.stopRecording();\n  },\n  startSessionRecording() {\n    var _a;\n    (_a = getSessionRecorder()) === null || _a === void 0 ? void 0 : _a.startRecording();\n  },\n  setUserContext(userContext) {\n    if (!isInited) {\n      console.debug('CoralogixRum must be initiated before setting user context');\n      return;\n    }\n    attributesProcessor === null || attributesProcessor === void 0 ? void 0 : attributesProcessor.setInternalLabels(Object.assign(Object.assign({}, attributesProcessor.getInternalLabels()), {\n      [CoralogixAttributes.USER_CONTEXT]: userContext\n    }));\n  },\n  getUserContext() {\n    return attributesProcessor === null || attributesProcessor === void 0 ? void 0 : attributesProcessor.getUserContext();\n  },\n  setLabels(labels) {\n    attributesProcessor === null || attributesProcessor === void 0 ? void 0 : attributesProcessor.setCustomLabels(labels);\n  },\n  getLabels() {\n    return (attributesProcessor === null || attributesProcessor === void 0 ? void 0 : attributesProcessor.getCustomLabels()) || {};\n  },\n  getSessionId() {\n    var _a, _b;\n    return (_b = (_a = getSessionManager()) === null || _a === void 0 ? void 0 : _a.getSession()) === null || _b === void 0 ? void 0 : _b.sessionId;\n  },\n  log(severity, message, data) {\n    if (!isInited) {\n      console.debug('CoralogixRum must be initiated before using log');\n      return;\n    }\n    if (!_customInstrumentation) {\n      console.error('Log was reported, but custom instrumentation is disabled.');\n      return;\n    }\n    _customInstrumentation === null || _customInstrumentation === void 0 ? void 0 : _customInstrumentation.log(severity, message, data);\n  },\n  debug(message, data) {\n    this.log(CoralogixLogSeverity.Debug, message, data);\n  },\n  verbose(message, data) {\n    this.log(CoralogixLogSeverity.Verbose, message, data);\n  },\n  info(message, data) {\n    this.log(CoralogixLogSeverity.Info, message, data);\n  },\n  warn(message, data) {\n    this.log(CoralogixLogSeverity.Warn, message, data);\n  },\n  error(message, data) {\n    this.log(CoralogixLogSeverity.Error, message, data);\n  },\n  critical(message, data) {\n    this.log(CoralogixLogSeverity.Critical, message, data);\n  }\n};\nwindow.CoralogixRum = CoralogixRum;","map":{"version":3,"names":["BatchSpanProcessor","getInstrumentationConfig","partition","saveInternalRumData","CoralogixSpanAttributesProcessor","UrlType","CoralogixAttributes","INSTRUMENTATIONS","MAX_EXPORT_BATCH_SIZE","NETWORK_URL_LABEL_PROVIDERS_KEY","OPTIONS_DEFAULTS","PAGE_URL_LABEL_PROVIDERS_KEY","SCHEDULE_DELAY_MILLIS","SDK_CONFIG_KEY","CoralogixExporter","CoralogixLogSeverity","CoralogixCustomLogInstrumentation","CoralogixWebTracerProvider","SessionManager","getSessionManager","getSessionRecorder","INTERNAL_INSTRUMENTATION_NAME","reportInternalEvent","handlePropagators","validateAndResolveInitConfig","isSamplingOn","CoralogixSpanMapProcessor","CoralogixSnapshotSpanProcessor","SnapshotManager","registerInstrumentations","CoralogixNavigationProcessor","isInited","_deregisterInstrumentations","_customInstrumentation","tracerProvider","attributesProcessor","snapshotProcessor","spanMapProcessor","navigationProcessor","exporter","CoralogixRum","init","options","console","warn","window","Symbol","error","resolvedOptions","sessionSampleRate","sessionConfig","debug","public_key","sessionRecordingConfig","start","ignoreUrls","labels","user_context","application","version","traceParentInHeader","environment","pluginDefaults","instrumentations","map","Instrument","confKey","disable","pluginConf","_a","instrumentation","Object","assign","ignoreErrors","filter","a","Boolean","mergedUserContext","APPLICATION_CONTEXT","JSON","stringify","USER_CONTEXT","ENVIRONMENT","setCustomLabels","addSpanProcessor","maxExportBatchSize","scheduledDelayMillis","pageUrlLabelProviders","networkUrlLabelProviders","labelProviders","urlType","PAGE","info","shutdown","undefined","stopSessionRecording","stop","setApplicationContext","applicationContext","setInternalLabels","getInternalLabels","stopRecording","startSessionRecording","startRecording","setUserContext","userContext","getUserContext","setLabels","getLabels","getCustomLabels","getSessionId","_b","getSession","sessionId","log","severity","message","data","Debug","verbose","Verbose","Info","Warn","Error","critical","Critical"],"sources":["../../../../libs/browser/src/index.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}