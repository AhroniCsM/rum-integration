{"ast":null,"code":"import { getElementXPath } from '@opentelemetry/sdk-trace-web';\nimport { InstrumentationBase } from '@opentelemetry/instrumentation';\nimport { unwrap, wrap } from 'shimmer';\nimport { CoralogixAttributes } from '../constants';\nimport { CoralogixEventType } from '../types';\nimport { CoralogixLogSeverity } from '../types-external';\nimport { getCircularReplacer } from '../utils';\nexport const ERROR_INSTRUMENTATION_NAME = 'errors';\nexport const ERROR_INSTRUMENTATION_VERSION = '1';\nexport const ErrorAttributes = {\n  TYPE: 'error_type',\n  STACK: 'error_stack',\n  MESSAGE: 'error_message'\n};\nexport var ErrorSource;\n(function (ErrorSource) {\n  ErrorSource[\"CONSOLE\"] = \"console\";\n  ErrorSource[\"WINDOW\"] = \"window\";\n  ErrorSource[\"UNHANDLED_REJECTION\"] = \"unhandledrejection\";\n  ErrorSource[\"DOCUMENT\"] = \"document\";\n})(ErrorSource || (ErrorSource = {}));\nconst STACK_LIMIT = 4096;\nconst MESSAGE_LIMIT = 1024;\nfunction addStackIfUseful(span, err) {\n  const {\n    stack\n  } = err;\n  const hasStack = !!(stack === null || stack === void 0 ? void 0 : stack.includes('at '));\n  if (err && hasStack) {\n    span.setAttribute(ErrorAttributes.STACK, stack.substring(0, STACK_LIMIT));\n  }\n}\nconst _consoleErrorHandler = that => {\n  return original => (...args) => {\n    that.report(ErrorSource.CONSOLE, args);\n    return original.apply(that, args);\n  };\n};\nconst _errorListener = that => {\n  return event => {\n    that.report(ErrorSource.WINDOW, event);\n  };\n};\nconst _unhandledRejectionListener = that => {\n  return event => {\n    that.report(ErrorSource.UNHANDLED_REJECTION, event.reason);\n  };\n};\nconst _documentErrorListener = that => {\n  return event => {\n    that.report(ErrorSource.DOCUMENT, event);\n  };\n};\nfunction addErrorDefaultAttributes(span) {\n  span.setAttribute(CoralogixAttributes.EVENT_TYPE, CoralogixEventType.ERROR);\n  span.setAttribute(CoralogixAttributes.SEVERITY, CoralogixLogSeverity.Error);\n}\nexport class CoralogixErrorInstrumentation extends InstrumentationBase {\n  constructor(config) {\n    super(ERROR_INSTRUMENTATION_NAME, ERROR_INSTRUMENTATION_VERSION, config);\n    this.parseErrorObject = obj => {\n      var _a;\n      return (_a = obj === null || obj === void 0 ? void 0 : obj.message) !== null && _a !== void 0 ? _a : JSON.stringify(obj, getCircularReplacer());\n    };\n    this.ignoreErrors = config.ignoreErrors;\n  }\n  init() {}\n  enable() {\n    wrap(console, 'error', _consoleErrorHandler(this));\n    window.addEventListener('error', _errorListener(this));\n    window.addEventListener('unhandledrejection', _unhandledRejectionListener(this));\n    document.documentElement.addEventListener('error', _documentErrorListener(this), {\n      capture: true\n    });\n  }\n  disable() {\n    unwrap(console, 'error');\n    window.removeEventListener('error', _errorListener(this));\n    window.removeEventListener('unhandledrejection', _unhandledRejectionListener(this));\n    document.documentElement.removeEventListener('error', _documentErrorListener(this), {\n      capture: true\n    });\n  }\n  report(source, arg) {\n    if (arg instanceof Array) {\n      if (arg.length === 0) {\n        return;\n      }\n    }\n    switch (true) {\n      case arg instanceof Error:\n        this.reportError(source, arg);\n        break;\n      case arg instanceof ErrorEvent:\n        this.reportErrorEvent(source, arg);\n        break;\n      case arg instanceof Event:\n        this.reportEvent(source, arg);\n        break;\n      case typeof arg === 'string':\n        this.reportString(source, arg);\n        break;\n      case arg instanceof Array:\n        {\n          // if any arguments are Errors then add the stack trace even though the message is handled differently\n          const firstError = arg.find(x => x instanceof Error);\n          const message = arg.map(msg => typeof msg === 'string' ? msg : this.parseErrorObject(msg)).join(' ');\n          this.reportString(source, message, firstError);\n          break;\n        }\n      default:\n        this.reportString(source, typeof arg === 'string' ? arg : this.getPossibleEventMessage(arg));\n    }\n  }\n  reportError(source, err) {\n    const {\n      message,\n      name\n    } = err;\n    const span = this.tracer.startSpan('error');\n    const cleanMessage = message.split('\\n')[0];\n    addErrorDefaultAttributes(span);\n    span.setAttribute(CoralogixAttributes.SOURCE, source);\n    span.setAttribute(ErrorAttributes.TYPE, name);\n    span.setAttribute(ErrorAttributes.MESSAGE, cleanMessage);\n    addStackIfUseful(span, err);\n    span.end();\n  }\n  reportString(source, message, firstError) {\n    const span = this.tracer.startSpan(source);\n    addErrorDefaultAttributes(span);\n    span.setAttribute(CoralogixAttributes.SOURCE, source);\n    span.setAttribute(ErrorAttributes.MESSAGE, message === null || message === void 0 ? void 0 : message.substring(0, MESSAGE_LIMIT));\n    if (firstError) {\n      addStackIfUseful(span, firstError);\n    }\n    span.end();\n  }\n  reportErrorEvent(source, {\n    error,\n    message\n  }) {\n    const event = error !== null && error !== void 0 ? error : message;\n    this.report(source, event);\n  }\n  reportEvent(source, ev) {\n    if (!ev.target) {\n      return;\n    }\n    const span = this.tracer.startSpan(source);\n    addErrorDefaultAttributes(span);\n    span.setAttribute(CoralogixAttributes.SOURCE, source);\n    if (ev.target) {\n      span.setAttribute('target_element', ev.target.tagName);\n      span.setAttribute('target_xpath', getElementXPath(ev.target, true));\n      span.setAttribute('target_src', ev.target.src);\n    }\n    span.end();\n  }\n  getPossibleEventMessage(event) {\n    const {\n      message,\n      statusMessage\n    } = event || {};\n    if (message && typeof message === 'string') {\n      return message;\n    }\n    // GrpcStatusEvent\n    if (statusMessage && typeof statusMessage === 'string') {\n      return statusMessage;\n    }\n    return JSON.stringify(event);\n  }\n}","map":{"version":3,"names":["getElementXPath","InstrumentationBase","unwrap","wrap","CoralogixAttributes","CoralogixEventType","CoralogixLogSeverity","getCircularReplacer","ERROR_INSTRUMENTATION_NAME","ERROR_INSTRUMENTATION_VERSION","ErrorAttributes","TYPE","STACK","MESSAGE","ErrorSource","STACK_LIMIT","MESSAGE_LIMIT","addStackIfUseful","span","err","stack","hasStack","includes","setAttribute","substring","_consoleErrorHandler","that","original","args","report","CONSOLE","apply","_errorListener","event","WINDOW","_unhandledRejectionListener","UNHANDLED_REJECTION","reason","_documentErrorListener","DOCUMENT","addErrorDefaultAttributes","EVENT_TYPE","ERROR","SEVERITY","Error","CoralogixErrorInstrumentation","constructor","config","parseErrorObject","obj","_a","message","JSON","stringify","ignoreErrors","init","enable","console","window","addEventListener","document","documentElement","capture","disable","removeEventListener","source","arg","Array","length","reportError","ErrorEvent","reportErrorEvent","Event","reportEvent","reportString","firstError","find","x","map","msg","join","getPossibleEventMessage","name","tracer","startSpan","cleanMessage","split","SOURCE","end","error","ev","target","tagName","src","statusMessage"],"sources":["../../../../../libs/browser/src/instrumentations/CoralogixErrorInstrumentation.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}