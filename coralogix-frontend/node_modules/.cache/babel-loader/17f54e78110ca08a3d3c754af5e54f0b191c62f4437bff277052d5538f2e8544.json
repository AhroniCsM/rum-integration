{"ast":null,"code":"import { InstrumentationBase } from '@opentelemetry/instrumentation';\nimport { CSS_EXTENSIONS, DOC_EXTENSIONS, FONT_EXTENSIONS, FONTS_URL, IMG_EXTENSIONS, MEDIA_EXTENSIONS, OTHER_EXTENSIONS, RESOURCES_INSTRUMENTATION_NAME, RESOURCES_INSTRUMENTATION_VERSION, SCRIPT_EXTENSIONS } from './instrumentation.consts';\nimport { CoralogixEventType, PerformanceTypes } from '../types';\nimport { CORALOGIX_LOGS_URL_SUFFIX, CoralogixAttributes, MAX_CHARACTERS } from '../constants';\nimport { deepClone, supportedPerformanceTypes, valueEndWithOrInclude } from '../utils';\nimport { resourceInitiatorTypeIs } from './instrumentation.helper';\nimport { ResourceInitiatorTypes } from './instrumentation.model';\nimport { getSdkConfig } from '../helpers';\nexport class CoralogixResourcesInstrumentation extends InstrumentationBase {\n  constructor(config) {\n    var _a;\n    super(RESOURCES_INSTRUMENTATION_NAME, RESOURCES_INSTRUMENTATION_VERSION, config);\n    this.ignoreUrls = (_a = getSdkConfig()) === null || _a === void 0 ? void 0 : _a.ignoreUrls;\n    if (supportedPerformanceTypes[PerformanceTypes.Resource]) {\n      this.registerToResources();\n    } else {\n      console.warn('Coralogix Browser SDK - browser doesnt support resource events');\n    }\n  }\n  registerToResources() {\n    this.resourcesObserver = new PerformanceObserver(list => {\n      list.getEntries().reduce((mappedEntries, entry) => {\n        const isNotFetchResourceType = entry.initiatorType !== ResourceInitiatorTypes.Fetch;\n        const isResourceNotContainsCoralogixLogsSuffix = !entry.name.includes(CORALOGIX_LOGS_URL_SUFFIX);\n        const isResourceNotIgnored = !this.isResourceIgnored(entry.name);\n        if ((isNotFetchResourceType || isResourceNotContainsCoralogixLogsSuffix) && isResourceNotIgnored) {\n          mappedEntries.push(this.mapResource(entry));\n        }\n        return mappedEntries;\n      }, []).forEach(entry => {\n        this.createSpanFromResource(entry);\n      });\n    });\n    this.resourcesObserver.observe({\n      type: PerformanceTypes.Resource,\n      buffered: true\n    });\n  }\n  isResourceIgnored(resourceName) {\n    var _a;\n    if (!resourceName || !((_a = this.ignoreUrls) === null || _a === void 0 ? void 0 : _a.length)) {\n      return false;\n    }\n    return this.ignoreUrls.some(url => {\n      if (url instanceof RegExp) {\n        return url.test(resourceName);\n      } else if (typeof url === 'string') {\n        resourceName = resourceName.toLowerCase();\n        url = url.toLowerCase();\n        return url.includes(resourceName);\n      } else {\n        console.warn('Coralogix Browser SDK - ignoreUrls must be from type string | Regex');\n        return false;\n      }\n    });\n  }\n  mapResource(resource) {\n    const resourceName = resource.name;\n    let initiatorType = resource.initiatorType;\n    switch (true) {\n      case resourceInitiatorTypeIs(initiatorType, [ResourceInitiatorTypes.Beacon]) || valueEndWithOrInclude(resourceName, OTHER_EXTENSIONS):\n        initiatorType = ResourceInitiatorTypes.Other;\n        break;\n      case initiatorType !== ResourceInitiatorTypes.Css && valueEndWithOrInclude(resourceName, CSS_EXTENSIONS):\n        initiatorType = ResourceInitiatorTypes.Css;\n        break;\n      case initiatorType !== ResourceInitiatorTypes.Script && valueEndWithOrInclude(resourceName, SCRIPT_EXTENSIONS):\n        initiatorType = ResourceInitiatorTypes.Script;\n        break;\n      case initiatorType !== ResourceInitiatorTypes.Img && valueEndWithOrInclude(resourceName, IMG_EXTENSIONS):\n        initiatorType = ResourceInitiatorTypes.Img;\n        break;\n      case resourceName.includes(FONTS_URL) || valueEndWithOrInclude(resourceName, FONT_EXTENSIONS):\n        initiatorType = ResourceInitiatorTypes.Font;\n        break;\n      case initiatorType !== ResourceInitiatorTypes.Iframe && valueEndWithOrInclude(resourceName, DOC_EXTENSIONS):\n        initiatorType = ResourceInitiatorTypes.Doc;\n        break;\n      case resourceInitiatorTypeIs(initiatorType, [ResourceInitiatorTypes.Video, ResourceInitiatorTypes.Audio, ResourceInitiatorTypes.Track]) || valueEndWithOrInclude(resourceName, MEDIA_EXTENSIONS):\n        initiatorType = ResourceInitiatorTypes.Media;\n        break;\n    }\n    return Object.assign(Object.assign({}, deepClone(resource)), {\n      initiatorType\n    });\n  }\n  createSpanFromResource(entry) {\n    var _a;\n    const resourceSpan = this.tracer.startSpan(RESOURCES_INSTRUMENTATION_NAME);\n    resourceSpan.setAttribute(CoralogixAttributes.EVENT_TYPE, CoralogixEventType.RESOURCES);\n    const newEntry = Object.assign(Object.assign({}, deepClone(entry)), {\n      name: (_a = entry.name) === null || _a === void 0 ? void 0 : _a.slice(0, MAX_CHARACTERS)\n    });\n    resourceSpan.setAttribute(RESOURCES_INSTRUMENTATION_NAME, JSON.stringify(newEntry));\n    resourceSpan.end();\n  }\n  enable() {}\n  disable() {\n    var _a;\n    (_a = this.resourcesObserver) === null || _a === void 0 ? void 0 : _a.disconnect();\n  }\n  init() {\n    return undefined;\n  }\n}","map":{"version":3,"names":["InstrumentationBase","CSS_EXTENSIONS","DOC_EXTENSIONS","FONT_EXTENSIONS","FONTS_URL","IMG_EXTENSIONS","MEDIA_EXTENSIONS","OTHER_EXTENSIONS","RESOURCES_INSTRUMENTATION_NAME","RESOURCES_INSTRUMENTATION_VERSION","SCRIPT_EXTENSIONS","CoralogixEventType","PerformanceTypes","CORALOGIX_LOGS_URL_SUFFIX","CoralogixAttributes","MAX_CHARACTERS","deepClone","supportedPerformanceTypes","valueEndWithOrInclude","resourceInitiatorTypeIs","ResourceInitiatorTypes","getSdkConfig","CoralogixResourcesInstrumentation","constructor","config","ignoreUrls","_a","Resource","registerToResources","console","warn","resourcesObserver","PerformanceObserver","list","getEntries","reduce","mappedEntries","entry","isNotFetchResourceType","initiatorType","Fetch","isResourceNotContainsCoralogixLogsSuffix","name","includes","isResourceNotIgnored","isResourceIgnored","push","mapResource","forEach","createSpanFromResource","observe","type","buffered","resourceName","length","some","url","RegExp","test","toLowerCase","resource","Beacon","Other","Css","Script","Img","Font","Iframe","Doc","Video","Audio","Track","Media","Object","assign","resourceSpan","tracer","startSpan","setAttribute","EVENT_TYPE","RESOURCES","newEntry","slice","JSON","stringify","end","enable","disable","disconnect","init","undefined"],"sources":["../../../../../libs/browser/src/instrumentations/CoralogixResourcesInstrumentation.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}