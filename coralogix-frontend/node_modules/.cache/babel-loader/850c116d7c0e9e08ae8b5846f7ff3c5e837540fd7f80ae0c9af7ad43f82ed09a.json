{"ast":null,"code":"import { InstrumentationBase } from '@opentelemetry/instrumentation';\nimport { CoralogixAttributes, MASKED_TEXT, MAX_INTERACTION_ELEMENT_SIZE } from '../constants';\nimport { CoralogixEventType } from '../types';\nimport { addEventListeners } from '../tools/addEventListener';\nimport { getSdkConfig } from '../helpers';\nexport const USER_INTERACTION_INSTRUMENTATION_NAME = 'user-interaction';\nexport const USER_INTERACTION_INSTRUMENTATION_VERSION = '1';\nexport const DEFAULT_INSTRUMENTED_EVENTS = {\n  [\"click\" /* DOM_EVENT.CLICK */]: true\n};\nexport class CoralogixUserInteractionInstrumentation extends InstrumentationBase {\n  constructor(config) {\n    super(USER_INTERACTION_INSTRUMENTATION_NAME, USER_INTERACTION_INSTRUMENTATION_VERSION, config);\n    this.handler = _ => {};\n    this.stop = () => {};\n  }\n  enable() {\n    var _a;\n    this.handler = e => {\n      const eventTarget = e.target;\n      const span = this.tracer.startSpan(USER_INTERACTION_INSTRUMENTATION_NAME);\n      const config = getSdkConfig();\n      const {\n        innerText,\n        innerHTML,\n        id,\n        type,\n        value,\n        className,\n        nodeName\n      } = eventTarget;\n      const finalInnerHtml = this.shouldMaskByClass(config, className) ? MASKED_TEXT : innerHTML;\n      span.setAttribute(CoralogixAttributes.EVENT_TYPE, CoralogixEventType.USER_INTERACTION);\n      span.setAttribute(CoralogixAttributes.INTERACTION_EVENT_NAME, e.type);\n      if (eventTarget && eventTarget instanceof HTMLElement) {\n        const elementInnerText = () => {\n          const val = innerText || value || '';\n          if (this.shouldMaskElement(config, nodeName, className, type)) {\n            return MASKED_TEXT;\n          }\n          return typeof val === 'string' ? val : '';\n        };\n        [[CoralogixAttributes.ELEMENT_INNER_HTML, (finalInnerHtml === null || finalInnerHtml === void 0 ? void 0 : finalInnerHtml.length) < MAX_INTERACTION_ELEMENT_SIZE ? finalInnerHtml : ''], [CoralogixAttributes.ELEMENT_ID, id], [CoralogixAttributes.ELEMENT_CLASSES, className], [CoralogixAttributes.TARGET_ELEMENT_TYPE, type], [CoralogixAttributes.ELEMENT_INNER_TEXT, elementInnerText().slice(0, MAX_INTERACTION_ELEMENT_SIZE)], [CoralogixAttributes.TARGET_ELEMENT, nodeName]].forEach(([key, value]) => {\n          span.setAttribute(key, value);\n        });\n      }\n      span.end();\n    };\n    const eventsMap = Object.assign(Object.assign({}, DEFAULT_INSTRUMENTED_EVENTS), (_a = this._config) === null || _a === void 0 ? void 0 : _a['events']);\n    const eventNames = Object.entries(eventsMap).filter(([_, enabled]) => enabled).map(([eventName]) => eventName);\n    this.stop = addEventListeners(document, eventNames, this.handler, {\n      capture: true,\n      passive: true\n    }).stop;\n  }\n  shouldMaskElement(config, nodeName, className, type) {\n    const {\n      maskInputTypes,\n      maskClass\n    } = config;\n    const shouldMaskByInput = nodeName === 'INPUT' && maskInputTypes.includes(type);\n    const shouldMaskByClass = this.shouldMaskByClass(config, className);\n    return shouldMaskByInput || shouldMaskByClass;\n  }\n  shouldMaskByClass(config, className) {\n    const {\n      maskClass\n    } = config;\n    if (maskClass instanceof RegExp) {\n      return maskClass.test(className);\n    }\n    if (typeof className === 'string') {\n      return className.includes(maskClass);\n    }\n    return false;\n  }\n  disable() {\n    this.stop();\n  }\n  init() {\n    return undefined;\n  }\n}","map":{"version":3,"names":["InstrumentationBase","CoralogixAttributes","MASKED_TEXT","MAX_INTERACTION_ELEMENT_SIZE","CoralogixEventType","addEventListeners","getSdkConfig","USER_INTERACTION_INSTRUMENTATION_NAME","USER_INTERACTION_INSTRUMENTATION_VERSION","DEFAULT_INSTRUMENTED_EVENTS","CoralogixUserInteractionInstrumentation","constructor","config","handler","_","stop","enable","e","eventTarget","target","span","tracer","startSpan","innerText","innerHTML","id","type","value","className","nodeName","finalInnerHtml","shouldMaskByClass","setAttribute","EVENT_TYPE","USER_INTERACTION","INTERACTION_EVENT_NAME","HTMLElement","elementInnerText","val","shouldMaskElement","ELEMENT_INNER_HTML","length","ELEMENT_ID","ELEMENT_CLASSES","TARGET_ELEMENT_TYPE","ELEMENT_INNER_TEXT","slice","TARGET_ELEMENT","forEach","key","end","eventsMap","Object","assign","_a","_config","eventNames","entries","filter","enabled","map","eventName","document","capture","passive","maskInputTypes","maskClass","shouldMaskByInput","includes","RegExp","test","disable","init","undefined"],"sources":["../../../../../libs/browser/src/instrumentations/CoralogixUserInteractionInstrumentation.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}