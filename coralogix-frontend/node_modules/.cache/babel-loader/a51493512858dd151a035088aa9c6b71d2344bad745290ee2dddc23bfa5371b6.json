{"ast":null,"code":"import { CoralogixAttributes } from '../constants';\nimport { getNowTime } from '../utils/time';\nexport class CoralogixSpanAttributesProcessor {\n  constructor(labels) {\n    this.labels = {\n      [CoralogixAttributes.CUSTOM_LABELS]: '{}'\n    };\n    if (labels) {\n      this.labels = labels;\n    }\n  }\n  setCustomLabels(labels) {\n    this.labels[CoralogixAttributes.CUSTOM_LABELS] = JSON.stringify(labels !== null && labels !== void 0 ? labels : {});\n  }\n  setInternalLabels(labels) {\n    this.labels = Object.assign({\n      [CoralogixAttributes.CUSTOM_LABELS]: this.labels[CoralogixAttributes.CUSTOM_LABELS]\n    }, labels ? this.stringifyValues(labels) : {});\n  }\n  getLabels() {\n    return JSON.parse(JSON.stringify(this.labels));\n  }\n  getCustomLabels() {\n    return JSON.parse(this.labels[CoralogixAttributes.CUSTOM_LABELS]);\n  }\n  getInternalLabels() {\n    const labels = Object.assign({}, this.labels);\n    delete labels[CoralogixAttributes.CUSTOM_LABELS];\n    return labels;\n  }\n  getUserContext() {\n    const userContext = this.labels[CoralogixAttributes.USER_CONTEXT];\n    return userContext ? JSON.parse(`${userContext}`) : undefined;\n  }\n  forceFlush() {\n    return Promise.resolve();\n  }\n  onStart(span) {\n    span.setAttribute(CoralogixAttributes.TIMESTAMP, getNowTime());\n    span.setAttribute(CoralogixAttributes.USER_AGENT, navigator.userAgent);\n    span.setAttributes(this.labels);\n  }\n  onEnd() {}\n  shutdown() {\n    return Promise.resolve();\n  }\n  stringifyValues(labels) {\n    const resolvedLabels = {};\n    for (const key in labels) {\n      resolvedLabels[key] = typeof labels[key] === 'string' ? labels[key] : JSON.stringify(labels[key]);\n    }\n    return resolvedLabels;\n  }\n}","map":{"version":3,"names":["CoralogixAttributes","getNowTime","CoralogixSpanAttributesProcessor","constructor","labels","CUSTOM_LABELS","setCustomLabels","JSON","stringify","setInternalLabels","Object","assign","stringifyValues","getLabels","parse","getCustomLabels","getInternalLabels","getUserContext","userContext","USER_CONTEXT","undefined","forceFlush","Promise","resolve","onStart","span","setAttribute","TIMESTAMP","USER_AGENT","navigator","userAgent","setAttributes","onEnd","shutdown","resolvedLabels","key"],"sources":["../../../../../libs/browser/src/processors/CoralogixSpanAttributesProcessor.ts"],"sourcesContent":[null],"mappings":"AAEA,SAASA,mBAAmB,QAAQ,cAAc;AAClD,SAASC,UAAU,QAAQ,eAAe;AAE1C,OAAM,MAAOC,gCAAgC;EAK3CC,YAAYC,MAA2B;IAJ/B,KAAAA,MAAM,GAAuB;MACnC,CAACJ,mBAAmB,CAACK,aAAa,GAAG;KACtC;IAGC,IAAID,MAAM,EAAE;MACV,IAAI,CAACA,MAAM,GAAGA,MAAM;;EAExB;EAEAE,eAAeA,CAACF,MAA2B;IACzC,IAAI,CAACA,MAAM,CAACJ,mBAAmB,CAACK,aAAa,CAAC,GAAGE,IAAI,CAACC,SAAS,CAC7DJ,MAAM,aAANA,MAAM,cAANA,MAAM,GAAI,EAAE,CACb;EACH;EAEAK,iBAAiBA,CAACL,MAA2B;IAC3C,IAAI,CAACA,MAAM,GAAAM,MAAA,CAAAC,MAAA;MACT,CAACX,mBAAmB,CAACK,aAAa,GAChC,IAAI,CAACD,MAAM,CAACJ,mBAAmB,CAACK,aAAa;IAAC,GAC5CD,MAAM,GAAG,IAAI,CAACQ,eAAe,CAACR,MAAM,CAAC,GAAG,EAAG,CAChD;EACH;EAEAS,SAASA,CAAA;IACP,OAAON,IAAI,CAACO,KAAK,CAACP,IAAI,CAACC,SAAS,CAAC,IAAI,CAACJ,MAAM,CAAC,CAAC;EAChD;EAEAW,eAAeA,CAAA;IACb,OAAOR,IAAI,CAACO,KAAK,CAAC,IAAI,CAACV,MAAM,CAACJ,mBAAmB,CAACK,aAAa,CAAC,CAAC;EACnE;EAEAW,iBAAiBA,CAAA;IACf,MAAMZ,MAAM,GAAAM,MAAA,CAAAC,MAAA,KAAQ,IAAI,CAACP,MAAM,CAAE;IAEjC,OAAOA,MAAM,CAACJ,mBAAmB,CAACK,aAAa,CAAC;IAEhD,OAAOD,MAAM;EACf;EAEAa,cAAcA,CAAA;IACZ,MAAMC,WAAW,GAAG,IAAI,CAACd,MAAM,CAACJ,mBAAmB,CAACmB,YAAY,CAAC;IACjE,OAAOD,WAAW,GAAGX,IAAI,CAACO,KAAK,CAAC,GAAGI,WAAW,EAAE,CAAC,GAAGE,SAAS;EAC/D;EAEAC,UAAUA,CAAA;IACR,OAAOC,OAAO,CAACC,OAAO,EAAE;EAC1B;EAEAC,OAAOA,CAACC,IAAU;IAChBA,IAAI,CAACC,YAAY,CAAC1B,mBAAmB,CAAC2B,SAAS,EAAE1B,UAAU,EAAE,CAAC;IAC9DwB,IAAI,CAACC,YAAY,CAAC1B,mBAAmB,CAAC4B,UAAU,EAAEC,SAAS,CAACC,SAAS,CAAC;IACtEL,IAAI,CAACM,aAAa,CAAC,IAAI,CAAC3B,MAAM,CAAC;EACjC;EAEA4B,KAAKA,CAAA,GAAU;EAEfC,QAAQA,CAAA;IACN,OAAOX,OAAO,CAACC,OAAO,EAAE;EAC1B;EAEQX,eAAeA,CAACR,MAA0B;IAChD,MAAM8B,cAAc,GAA2B,EAAE;IACjD,KAAK,MAAMC,GAAG,IAAI/B,MAAM,EAAE;MACxB8B,cAAc,CAACC,GAAG,CAAC,GACjB,OAAO/B,MAAM,CAAC+B,GAAG,CAAC,KAAK,QAAQ,GAC3B/B,MAAM,CAAC+B,GAAG,CAAC,GACX5B,IAAI,CAACC,SAAS,CAACJ,MAAM,CAAC+B,GAAG,CAAC,CAAC;;IAGnC,OAAOD,cAAc;EACvB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}