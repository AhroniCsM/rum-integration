import { __rest } from "tslib";
import { isObject } from './utils/object';
export function processBeforeSend(cxSpan, options) {
    if (!(options === null || options === void 0 ? void 0 : options.beforeSend)) {
        return cxSpan;
    }
    const cxRumEvent = cxSpan.text.cx_rum;
    const editableCxRumEvent = cxRumEventToEditable(cxRumEvent);
    const beforeSendResult = options.beforeSend(editableCxRumEvent);
    if (!validateBeforeSendResult(beforeSendResult)) {
        return null;
    }
    const { version_metadata: { app_name: applicationName }, event_context: { severity }, } = beforeSendResult;
    return Object.assign(Object.assign({}, cxSpan), { applicationName,
        severity, text: { cx_rum: editableToCxRumEvent(beforeSendResult, cxRumEvent) } });
}
function validateBeforeSendResult(beforeSendResult) {
    if (beforeSendResult == null)
        return null;
    const requiredKeys = [
        'version_metadata',
        'session_context',
        'page_context',
        'event_context',
    ];
    const isMissingRequiredKey = () => requiredKeys.some((key) => !(beforeSendResult === null || beforeSendResult === void 0 ? void 0 : beforeSendResult[key]));
    if (!isObject(beforeSendResult) || isMissingRequiredKey()) {
        console.warn('CoralogixRum: beforeSend must return null, undefined or a valid event.');
        return null;
    }
    return beforeSendResult;
}
function cxRumEventToEditable(cxRumEvent) {
    const { session_context: { user_id, user_name, user_email, user_metadata }, browser_sdk, timestamp } = cxRumEvent, rest = __rest(cxRumEvent, ["session_context", "browser_sdk", "timestamp"]);
    return Object.assign(Object.assign({}, rest), { session_context: { user_id, user_email, user_name, user_metadata } });
}
function editableToCxRumEvent(editable, cxRumEvent) {
    return Object.assign(Object.assign(Object.assign({}, cxRumEvent), editable), { session_context: Object.assign(Object.assign({}, cxRumEvent.session_context), editable.session_context) });
}
//# sourceMappingURL=before-send.js.map