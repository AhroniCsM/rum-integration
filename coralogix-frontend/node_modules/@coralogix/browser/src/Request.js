import { getSdkConfig } from './helpers';
import { CoralogixDomainsApiUrlMap, PROXY_CX_FORWARD_PARAMETER, } from './constants';
export class Request {
    constructor(requestConfig) {
        this.requestConfig = requestConfig;
        this.resolvedUrl = '';
        this.resolvedHeaders = {};
        this.init();
    }
    init() {
        const { proxyUrl, coralogixDomain, public_key } = getSdkConfig();
        const { suffix, headers } = this.requestConfig;
        const cxEndpoint = `${CoralogixDomainsApiUrlMap[coralogixDomain]}${suffix}`;
        this.resolvedUrl = proxyUrl
            ? `${proxyUrl}?${PROXY_CX_FORWARD_PARAMETER}=${encodeURIComponent(cxEndpoint)}`
            : cxEndpoint;
        if (public_key) {
            headers['Authorization'] = `Bearer ${public_key}`;
        }
        this.resolvedHeaders = headers;
    }
    send(body) {
        return fetch(this.resolvedUrl, {
            method: 'POST',
            headers: this.resolvedHeaders,
            body,
        }).catch((e) => {
            return e;
        });
    }
}
//# sourceMappingURL=Request.js.map