import { InstrumentationBase, } from '@opentelemetry/instrumentation';
import { DOM_INSTRUMENTATION_NAME, DOM_INSTRUMENTATION_VERSION, } from './instrumentation.consts';
import { CoralogixAttributes } from '../constants';
import { CoralogixEventType } from '../types';
// In future we can make this class more generic and add more DOM events
export class CoralogixDOMInstrumentation extends InstrumentationBase {
    constructor(config) {
        super(DOM_INSTRUMENTATION_NAME, DOM_INSTRUMENTATION_VERSION, config);
        this.visibilityChangeHandler = () => {
            if (document.hidden) {
                const domSpan = this.tracer.startSpan(DOM_INSTRUMENTATION_NAME);
                domSpan.setAttribute(CoralogixAttributes.EVENT_TYPE, CoralogixEventType.DOM);
                domSpan.end();
            }
        };
    }
    registerToDOMEvents() {
        document.addEventListener('visibilitychange', this.visibilityChangeHandler);
    }
    unregisterFromDOMEvents() {
        document.removeEventListener('visibilitychange', this.visibilityChangeHandler);
    }
    init() {
        return undefined;
    }
    disable() {
        this.unregisterFromDOMEvents();
    }
    enable() {
        setTimeout(() => {
            this.registerToDOMEvents();
        });
    }
}
//# sourceMappingURL=CoralogixDOMInstrumentation.js.map