import { XMLHttpRequestInstrumentation, } from '@opentelemetry/instrumentation-xml-http-request';
import { CoralogixAttributes } from '../constants';
import { CoralogixEventType } from '../types';
import { CoralogixLogSeverity } from '../types-external';
import { isNetworkError } from '../utils';
import { propagateTraceHeaderCorsUrls } from '../CoralogixPropgator';
export var XHRSource;
(function (XHRSource) {
    XHRSource["XHR"] = "xhr";
})(XHRSource || (XHRSource = {}));
export class CoralogixXhrInstrumentation extends XMLHttpRequestInstrumentation {
    constructor(config) {
        propagateTraceHeaderCorsUrls(config);
        config.applyCustomAttributesOnSpan = (span, xhr) => {
            const { status } = xhr;
            span.setAttributes({
                [CoralogixAttributes.SEVERITY]: isNetworkError(status)
                    ? CoralogixLogSeverity.Error
                    : CoralogixLogSeverity.Info,
                [CoralogixAttributes.EVENT_TYPE]: CoralogixEventType.NETWORK_REQUEST,
                [CoralogixAttributes.SOURCE]: XHRSource.XHR,
            });
        };
        super(config);
    }
}
//# sourceMappingURL=CoralogixXhrInstrumentation.js.map