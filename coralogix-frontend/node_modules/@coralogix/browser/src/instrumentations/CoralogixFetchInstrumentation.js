import { FetchInstrumentation, } from '@opentelemetry/instrumentation-fetch';
import { CoralogixAttributes } from '../constants';
import { CoralogixEventType } from '../types';
import { CoralogixLogSeverity } from '../types-external';
import { propagateTraceHeaderCorsUrls } from '../CoralogixPropgator';
import { isNetworkError } from '../utils';
export var FetchSource;
(function (FetchSource) {
    FetchSource["FETCH"] = "fetch";
})(FetchSource || (FetchSource = {}));
export class CoralogixFetchInstrumentation extends FetchInstrumentation {
    constructor(config) {
        propagateTraceHeaderCorsUrls(config);
        config.applyCustomAttributesOnSpan = (span, request, result) => {
            const { status } = result;
            span.setAttributes({
                [CoralogixAttributes.SEVERITY]: isNetworkError(status)
                    ? CoralogixLogSeverity.Error
                    : CoralogixLogSeverity.Info,
                [CoralogixAttributes.EVENT_TYPE]: CoralogixEventType.NETWORK_REQUEST,
                [CoralogixAttributes.SOURCE]: FetchSource.FETCH,
            });
        };
        super(config);
    }
    enable() {
        super.enable();
    }
}
//# sourceMappingURL=CoralogixFetchInstrumentation.js.map