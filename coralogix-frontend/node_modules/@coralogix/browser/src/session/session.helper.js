import { DEFAULT_SESSION_CONFIG } from './session.consts';
import { CoralogixEventType } from '../types';
import { DEFAULT_MS_RECORD_TIME, DEFAULT_RUM_EVENTS, MAX_MS_RECORD_TIME, MAX_RUM_EVENTS, } from './sessionWithError.consts';
import { getSessionManager } from '../helpers';
function resolveMaxRumEvents(maxRumEvents) {
    if (!maxRumEvents) {
        return DEFAULT_RUM_EVENTS;
    }
    return maxRumEvents > MAX_RUM_EVENTS ? MAX_RUM_EVENTS : maxRumEvents;
}
function resolveMaxRecordTime(maxRecordTime) {
    if (!maxRecordTime) {
        return DEFAULT_MS_RECORD_TIME;
    }
    return maxRecordTime > MAX_MS_RECORD_TIME
        ? MAX_MS_RECORD_TIME
        : maxRecordTime;
}
function resolveSessionWithErrorsConfig(config) {
    var _a;
    if (!config) {
        return { enable: false };
    }
    return Object.assign(Object.assign({}, config), { maxRumEvents: resolveMaxRumEvents(config.maxRumEvents), maxRecordTime: resolveMaxRecordTime(config.maxRecordTime), instrumentationsToSend: (_a = config.instrumentationsToSend) !== null && _a !== void 0 ? _a : {
            [CoralogixEventType.WEB_VITALS]: true,
        } });
}
export function resolveSessionConfig(config) {
    var _a;
    if (!config) {
        return DEFAULT_SESSION_CONFIG;
    }
    return Object.assign(Object.assign({}, config), { sessionSampleRate: (_a = config.sessionSampleRate) !== null && _a !== void 0 ? _a : 100, onlyWithErrorConfig: resolveSessionWithErrorsConfig(config.onlyWithErrorConfig) });
}
export function resolveSessionRecordingConfig(config) {
    var _a;
    if (config) {
        return Object.assign(Object.assign({}, config), { sessionRecordingSampleRate: (_a = config.sessionRecordingSampleRate) !== null && _a !== void 0 ? _a : 100 });
    }
    return;
}
export function isSamplingOn(threshold) {
    return threshold > 0 && Math.random() * 100 <= threshold;
}
export const isSessionWithError = () => {
    const { onlySessionWithErrorMode, cachedLogsSent } = getSessionManager();
    return onlySessionWithErrorMode && !cachedLogsSent;
};
//# sourceMappingURL=session.helper.js.map