import { MILLISECONDS_PER_HOUR, millisecondsPerMinute } from '../utils/time';
export const MAX_BATCH_TIME_MS = 10000; //10s
export const SESSION_RECORDING_DEFAULT_HEADERS = {
    'Content-Encoding': 'gzip',
};
export const SESSION_RECORDING_DEFAULT_ERROR_MESSAGE = 'Coralogix Browser SDK - Recording is not supported on this platform';
export const SESSION_RECORDING_NETWORK_ERR0R_MESSAGE = 'Coralogix Browser SDK - Error while sending record';
export const BATCH_TIME_DELAY = 1000;
export const SESSION_RECORDING_POSTFIX_URL = '/browser/alpha/sessionrecording';
export const SESSION_KEY = 'rum_session';
export const PREV_SESSION_KEY = 'rum_prev_session';
export const MAX_MUTATIONS_FOR_SESSION_RECORDING = 5000;
export const DEFAULT_SESSION_CONFIG = {
    sessionSampleRate: 100,
    onlyWithErrorConfig: {
        enable: false,
    },
};
export const SESSION_IDLE_TIME = 15 * millisecondsPerMinute;
export const SESSION_EXPIRATION_TIME = MILLISECONDS_PER_HOUR;
export const SESSION_MANAGER_KEY = 'rumSessionManager';
export const SESSION_RECORDER_KEY = 'rumSessionRecorder';
//# sourceMappingURL=session.consts.js.map