function isString(value) {
    return typeof value === 'string';
}
function isRegExp(value) {
    return value instanceof RegExp;
}
export function isMatchingPattern(value, pattern, requireExactStringMatch = false) {
    if (!isString(value)) {
        return false;
    }
    if (isRegExp(pattern)) {
        return pattern.test(value);
    }
    if (isString(pattern)) {
        return requireExactStringMatch
            ? value === pattern
            : value.includes(pattern);
    }
    return false;
}
export function stringMatchesSomePattern(testString, patterns = [], requireExactStringMatch = false) {
    return patterns.some((pattern) => isMatchingPattern(testString, pattern, requireExactStringMatch));
}
/**
 * UUID v4
 * https://gist.github.com/jed/982883
 */
export function generateUUID(placeholder) {
    return placeholder
        ? (+placeholder ^ ((Math.random() * 16) >> (+placeholder / 4))).toString(16)
        : `${1e7}-${1e3}-${4e3}-${8e3}-${1e11}`.replace(/[018]/g, generateUUID);
}
//# sourceMappingURL=string.js.map