import { CoralogixErrorInstrumentation, ERROR_INSTRUMENTATION_NAME, ErrorAttributes, } from './instrumentations/CoralogixErrorInstrumentation';
import { CoralogixFetchInstrumentation } from './instrumentations/CoralogixFetchInstrumentation';
import { CoralogixXhrInstrumentation } from './instrumentations/CoralogixXhrInstrumentation';
import { CoralogixCustomLogInstrumentation } from './instrumentations/CoralogixCustomLogInstrumentation';
import { CoralogixUserInteractionInstrumentation } from './instrumentations/CoralogixUserInteractionInstrumentation';
import { CoralogixWebVitalsInstrumentation } from './instrumentations/CoralogixWebVitalsInstrumentation';
import { DOM_INSTRUMENTATION_NAME, INTERNAL_INSTRUMENTATION_NAME, LONG_TASKS_INSTRUMENTATION_NAME, RESOURCES_INSTRUMENTATION_NAME, WEB_VITALS_INSTRUMENTATION_NAME, } from './instrumentations/instrumentation.consts';
import { CoralogixLongTaskInstrumentation } from './instrumentations/CoralogixLongTaskInstrumentation';
import { CoralogixResourcesInstrumentation } from './instrumentations/CoralogixResourcesInstrumentation';
import { replacePatternsInUrl } from './utils';
import { millisecondsPerSecond } from './utils/time';
import { CoralogixInternalInstrumentation } from './instrumentations/CoralogixInternalInstrumentation';
import { CoralogixDOMInstrumentation } from './instrumentations/CoralogixDOMInstrumentation';
export const CORALOGIX_LOGS_URL_SUFFIX = '/browser/v1beta/logs';
export const CORALOGIX_RECORDING_URL_SUFFIX = '/sessionrecording';
export const MAX_EXPORT_BATCH_SIZE = 50;
export const MAX_INTERACTION_ELEMENT_SIZE = 1024;
export const MAX_CHARACTERS = 1024;
export const SCHEDULE_DELAY_MILLIS = 2 * millisecondsPerSecond;
export const REQUIRED_CONFIG_KEYS = [
    'application',
    'version',
    'coralogixDomain',
];
export const SDK_CONFIG_KEY = 'sdkConfig';
export const ID_MASK_KEY = '{id}';
export const UUID_REGEX = /[0-9a-fA-F-]{36}/g;
export const NANOID_REGEX = /^[a-zA-Z0-9-_]{21}$/;
export const PAGE_URL_LABEL_PROVIDERS_KEY = 'PAGE_URL_LABEL_PROVIDERS';
export const NETWORK_URL_LABEL_PROVIDERS_KEY = 'NETWORK_URL_LABEL_PROVIDERS';
export const RUM_INTERNAL_DATA_KEY = 'rumInternalData';
export const MASKED_TEXT = '***';
export const MASK_CLASS_DEFAULT = 'cx-mask';
export const MASK_INPUT_TYPES_DEFAULT = [
    'password',
    'email',
    'tel',
];
const idPatterns = [
    {
        pattern: new RegExp(UUID_REGEX),
        replacement: ID_MASK_KEY,
    },
    {
        pattern: new RegExp(NANOID_REGEX),
        replacement: ID_MASK_KEY,
    },
];
const defaultUrlBlueprinters = {
    pageUrlBlueprinters: [
        (url) => replacePatternsInUrl({ patterns: idPatterns, url }),
    ],
};
export const OPTIONS_DEFAULTS = {
    ignoreUrls: [
        new RegExp(CORALOGIX_LOGS_URL_SUFFIX),
        new RegExp(CORALOGIX_RECORDING_URL_SUFFIX),
    ],
    user_context: {
        user_id: '',
        user_name: '',
    },
    labels: {},
    urlBlueprinters: defaultUrlBlueprinters,
    collectIPData: true,
};
export const INSTRUMENTATIONS = [
    {
        Instrument: CoralogixErrorInstrumentation,
        confKey: ERROR_INSTRUMENTATION_NAME,
        disable: false,
    },
    {
        Instrument: CoralogixFetchInstrumentation,
        confKey: 'fetch',
        disable: false,
    },
    {
        Instrument: CoralogixXhrInstrumentation,
        confKey: 'xhr',
        disable: false,
    },
    {
        Instrument: CoralogixCustomLogInstrumentation,
        confKey: 'custom',
        disable: false,
    },
    {
        Instrument: CoralogixUserInteractionInstrumentation,
        confKey: 'interactions',
        disable: false,
    },
    {
        Instrument: CoralogixWebVitalsInstrumentation,
        confKey: WEB_VITALS_INSTRUMENTATION_NAME,
        disable: false,
    },
    {
        Instrument: CoralogixLongTaskInstrumentation,
        confKey: LONG_TASKS_INSTRUMENTATION_NAME,
        disable: false,
    },
    {
        Instrument: CoralogixResourcesInstrumentation,
        confKey: RESOURCES_INSTRUMENTATION_NAME,
        disable: false,
    },
    {
        Instrument: CoralogixInternalInstrumentation,
        confKey: INTERNAL_INSTRUMENTATION_NAME,
        disable: false,
    },
    {
        Instrument: CoralogixDOMInstrumentation,
        confKey: DOM_INSTRUMENTATION_NAME,
        disable: false,
    },
];
export const CoralogixAttributes = {
    USER_AGENT: 'user_agent',
    LOCATION_HREF: 'location_href',
    EVENT_TYPE: 'event_type',
    SEVERITY: 'severity',
    APPLICATION_CONTEXT: 'application_context',
    USER_CONTEXT: 'user_context',
    COUNTRY: 'country',
    SOURCE: 'source',
    ERROR: ErrorAttributes,
    LOG: 'cx_log',
    CUSTOM_LABELS: 'custom_labels',
    ENVIRONMENT: 'environment',
    INTERACTION_EVENT_NAME: 'interaction_event_name',
    ELEMENT_INNER_TEXT: 'element_inner_text',
    ELEMENT_INNER_HTML: 'element_inner_html',
    ELEMENT_ID: 'element_id',
    ELEMENT_CLASSES: 'element_classes',
    TARGET_XPATH: 'target_xpath',
    TARGET_ELEMENT: 'target_element',
    TARGET_ELEMENT_TYPE: 'target_element_type',
    TIMESTAMP: 'timestamp',
    INTERNAL: 'internal',
    PAGE_CONTEXT: 'page_context',
    IS_NAVIGATION_EVENT: 'is_navigation_event',
};
export const CoralogixDomainsApiUrlMap = {
    EU1: 'https://ingress.eu1.rum-ingress-coralogix.com',
    EU2: 'https://ingress.eu2.rum-ingress-coralogix.com',
    US1: 'https://ingress.us1.rum-ingress-coralogix.com',
    US2: 'https://ingress.us2.rum-ingress-coralogix.com',
    AP1: 'https://ingress.ap1.rum-ingress-coralogix.com',
    AP2: 'https://ingress.ap2.rum-ingress-coralogix.com', // ap-southeast-1 (Singapore)
};
export const PROXY_CX_FORWARD_PARAMETER = 'cxforward';
export const CX_MAPPED_SPAN = 'cx_mapped_span';
export const BASE_PATH = '/';
export const HASH_SEPARATOR = '#';
export const PARAMS_SEPARATOR = '?';
export const PROTOCOL_SEPARATOR = '://';
//# sourceMappingURL=constants.js.map